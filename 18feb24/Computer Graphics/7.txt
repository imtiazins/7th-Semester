#include<iostream>
#include<cmath>

class Point {
public:
    float x, y;

    Point(float x = 0, float y = 0) : x(x), y(y) {}

    void display() {
        std::cout << "(" << x << ", " << y << ")";
    }

    void translate(float dx, float dy) {
        x += dx;
        y += dy;
    }

    void rotate(float angle) {
        float radianAngle = angle * (M_PI / 180.0);
        float newX = x * cos(radianAngle) - y * sin(radianAngle);
        float newY = x * sin(radianAngle) + y * cos(radianAngle);
        x = newX;
        y = newY;
    }
};

int main() {
    Point p1(2, 3);

    std::cout << "Original Point: ";
    p1.display();
    std::cout << std::endl;

    // Translation
    p1.translate(3, 2);
    std::cout << "After Translation: ";
    p1.display();
    std::cout << std::endl;

    // Rotation
    p1.rotate(45);
    std::cout << "After Rotation: ";
    p1.display();
    std::cout << std::endl;

    return 0;
}
